# -*- coding: utf-8 -*-
# -*- ruby -*- 
#
#  Gyazz.com/kdictの内容から接続辞書テキストを生成
#

require 'net/http'

$wikibase = 'gyazz.com'
$wikiname = 'kdict'
$rootpage = 'リスト'

$wikiname = ARGV[0] if ARGV[0]
$rootpage = ARGV[1] if ARGV[1]

$weight = {}

#
# /$wikiname/name にリストされた単語のウェイトを計算する。
# Zipfを仮定する場合はウェイトを1/1, 1/2, 1/3, ... と減らす。
# そうでない場合はすべてに同じウェイトを割り当てる。
#
def process(name,value,zipf)
  wikiname = $wikiname
  if name =~ /^(.*)::(.*)$/ then
    wikiname = $1
    name = $2
  end
  n = 1.0
  Net::HTTP.start($wikibase, 80) {|http|
    response = http.get("/#{wikiname}/#{name}/text")
    l = response.body
    if l then
      l.each { |line|
        line.chomp!
        next if line =~ /^#/
        next if line =~ /^\s*$/
        div = (zipf ? n : 1.0)
        $weight[line] = value/div
        n += 1.0
      }
    end
  }
end

list = nil
Net::HTTP.start($wikibase, 80) {|http|
  response = http.get("/#{$wikiname}/#{$rootpage}/text")
  list = response.body
}

list.each { |entry|
  entry.chomp!
  next if entry =~ /^#/
  if entry =~ /\[\[(.*)\]\]\s+(\*)?(\d+)/ then
    process($1,$3.to_f,$2.to_s == '' ? true : false)
  end
}

$weight.keys.sort { |a,b|
  $weight[b] <=> $weight[a]
}.each { |entry|
  puts entry
}
